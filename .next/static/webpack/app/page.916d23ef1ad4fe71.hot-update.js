"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/hooks/useSupabaseAuth.ts":
/*!**************************************!*\
  !*** ./lib/hooks/useSupabaseAuth.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSupabaseAuth: function() { return /* binding */ useSupabaseAuth; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* __next_internal_client_entry_do_not_use__ useSupabaseAuth auto */ \n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://ygemxkfzjrkisizzissu.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlnZW14a2Z6anJraXNpenppc3N1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzQyMDk4NjksImV4cCI6MjA0OTc4NTg2OX0.6EzPFPcR4vYtd-41EhSfr_vWwSgAn6PhySt6PpkdMcM\");\nfunction useSupabaseAuth() {\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [syncing, setSyncing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Função para sincronizar o usuário com a tabela users\n    const syncUser = async (user)=>{\n        if (!user || syncing) return;\n        try {\n            var _user_user_metadata, _user_email, _user_user_metadata1;\n            setSyncing(true);\n            // Primeiro, tenta buscar o usuário existente\n            const { data: existingUser, error: selectError } = await supabase.from(\"users\").select(\"*\").eq(\"id\", user.id).single();\n            if (selectError && selectError.code !== \"PGRST116\") {\n                console.error(\"Erro ao buscar usu\\xe1rio:\", selectError);\n                return;\n            }\n            const userData = {\n                id: user.id,\n                email: user.email,\n                name: ((_user_user_metadata = user.user_metadata) === null || _user_user_metadata === void 0 ? void 0 : _user_user_metadata.full_name) || ((_user_email = user.email) === null || _user_email === void 0 ? void 0 : _user_email.split(\"@\")[0]),\n                image: (_user_user_metadata1 = user.user_metadata) === null || _user_user_metadata1 === void 0 ? void 0 : _user_user_metadata1.avatar_url\n            };\n            if (!existingUser) {\n                // Tenta inserir com upsert para garantir que não haverá duplicatas\n                const { error: upsertError } = await supabase.from(\"users\").upsert(userData, {\n                    onConflict: \"id\",\n                    ignoreDuplicates: true\n                });\n                if (upsertError && upsertError.code !== \"23505\") {\n                    console.error(\"Erro ao inserir usu\\xe1rio:\", upsertError);\n                }\n            } else {\n                // Verifica se há mudanças antes de atualizar\n                const hasChanges = Object.keys(userData).some((key)=>userData[key] !== existingUser[key]);\n                if (hasChanges) {\n                    const { error: updateError } = await supabase.from(\"users\").update(userData).eq(\"id\", user.id);\n                    if (updateError) {\n                        console.error(\"Erro ao atualizar usu\\xe1rio:\", updateError);\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Erro ao sincronizar usu\\xe1rio:\", error);\n        } finally{\n            setSyncing(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        const initAuth = async ()=>{\n            try {\n                const { data: { session } } = await supabase.auth.getSession();\n                if (mounted) {\n                    if (session === null || session === void 0 ? void 0 : session.user) {\n                        setUser(session.user);\n                        await syncUser(session.user);\n                    } else {\n                        setUser(null);\n                    }\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(\"Erro ao inicializar autentica\\xe7\\xe3o:\", error);\n                if (mounted) {\n                    setLoading(false);\n                }\n            }\n        };\n        initAuth();\n        const { data: { subscription } } = supabase.auth.onAuthStateChange(async (_event, session)=>{\n            if (mounted) {\n                if (session === null || session === void 0 ? void 0 : session.user) {\n                    setUser(session.user);\n                    await syncUser(session.user);\n                } else {\n                    setUser(null);\n                }\n                setLoading(false);\n            }\n        });\n        return ()=>{\n            mounted = false;\n            subscription.unsubscribe();\n        };\n    }, []);\n    const signOut = async ()=>{\n        try {\n            const { error } = await supabase.auth.signOut();\n            if (error) throw error;\n        } catch (error) {\n            console.error(\"Erro ao fazer logout:\", error);\n        }\n    };\n    return {\n        user,\n        loading,\n        signOut,\n        supabase\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/useSupabaseAuth.ts\n"));

/***/ })

});